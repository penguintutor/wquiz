concepts

Emphasis is on this being in PHP / Ajax
Whilst it would be possible to push more to client side (Javascript handle questions etc)
for simplicity 


Main pages 

index.php
- provides start page (can be bypassed by post directly to page)
- shows details of quiz (after post)
- from details page the next button will be get for non javascript or ajax button if javascript enabled


question.php 
- shows question
- with post saves current answer
	- Note all buttons are now post (forward / backward etc.)
- if in review mode then shows results instead of question

endquiz.php
- checks all questions answered
- clicking on link will reload page with results 




Templates
----------

Note templates used are header and footer
These are loaded as a regular include
If more need to be included (eg. menu) then these can be included in the header.php file (eg. use headercontainer)
Form buttons are not templated - they should be handled using css if they need to be customised




CSS files
---------

CSS files are not referenced in code.
They need to be included by the site configuration if required
CSS IDs / Classes are prefixed with wquiz-

eg.
wquiz-questionintro
wquiz-questionimage

** - see css-entities.txt for details

** see special case below for details of laying out button positions


Settings
--------

review_enabled (optional - true)  
if false then after last question provide results immediately
review_text - text for do you want to review (html)
review_show_unanswered (optional - true) - show "You have not answered ? questions".


Special case - default next button
------------

By default if a user presses enter rather than clicking a button the first submit button (as ordered in the html) is used. As we normally want this to be a later position (eg. previous before next) then this needs to be modified.

Options:
* position next button first and use CSS to re-order buttons (this is preferred method) 
* create a hidden button with value "default" and hide it
* use javascript to capture and handle the enter press 




############ temp scratch area ############


form input[type=submit] {
	background : url("submit.png") no-repeat center center;
	width : 115px;
	height :52px;
	border : none;
	color : transparent;
	font-size : 0
}


/*** Hiding buttons using css ***/
#replacement-1 {
  width: 100px;
  height: 55px;
  margin: 0;
  padding: 0;
  border: 0;
  background: transparent url(SearchGoogle.gif) no-repeat center top;
  text-indent: -1000em;
  cursor: pointer; /* hand-shaped cursor */
  cursor: hand; /* for IE 5.x */
}


or 
form input[type=submit] {
	background : url("submit.png") no-repeat center center;
	width : 115px;
	height :52px;
	border : none;
	color : transparent;
	font-size : 0
}

It's easy to change the image on the hover state:

form input[type=submit]:hover {
	background : url("submit-hover.png") no-repeat center center;
}




<form action="http://www.google.com/search" method="get">
  <input name="q" size="45" type="Text">

  &nbsp;
  <button id="replacement-1" type="submit">Search with Google</button>
  <!-- <div><button style="display:block" id="replacement-1" type="submit">Search with Google</button></div> -->
</form>

See:
http://www.ampsoft.net/webdesign-l/image-button.html



/**** Locking the table ****/
// previously used for offline quiz

# Can we do this using PHP Sessions instead?

// note this is perl - need to change to PHP
$dbh->do("lock tables $dbsettingstable write");
$dbh->do("unlock tables");

Note just lock whilst we update the count - then unlock. Once we've updated
the count we have blocked others from starting a housekeeping


// Not needed?
/*	$url = $settings->getSetting('site_url_path');
	if ($url == '')
	{
		$url = $_SERVER['REQUEST_URI'];
		// strip out this page part (ie. everything from last /)
		$url = substring (0, strrchr ($url, '/')+1);
	}
	$url .= 'review.php';*/
